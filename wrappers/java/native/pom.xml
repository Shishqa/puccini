<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!--
	Create "libpuccinijni.so" JNI shim, which implements the native methods in "puccini.jar"
	(created by ../java/pom.xml) and relies on the Puccini library ("libpuccini.so"),
	created	by ../../scripts/build-library.sh
	-->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<groupId>puccini</groupId>
	<artifactId>libpuccinijni</artifactId>
	<version>${puccini.version}</version>

	<!-- Shared library extension (Linux): libpuccinijni.so -->
	<packaging>so</packaging>

	<build>
		<plugins>
			<!-- Compile and link C source to a shared library in our "dist" directory -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<version>1.0-alpha-9</version>
				<extensions>true</extensions>
				<configuration>
					<sources>
						<source>
							<directory>src/main/c</directory>
							<fileNames>
								<fileName>puccini_TOSCA.c</fileName>
							</fileNames>
						</source>
					</sources>

					<compilerStartOptions>
						<!-- Our JNI shim headers (generated by ../java/pom.xml) -->
						<compilerStartOption>-I ${project.basedir}/../java/target/native/include</compilerStartOption>

						<!-- Headers from JDK -->
						<compilerStartOption>-I ${java.home}/include</compilerStartOption>
						<compilerStartOption>-I ${java.home}/include/linux</compilerStartOption>

						<!-- "libpuccini.h" (generated by ../../scripts/build-library.sh) -->
						<compilerStartOption>-I ${project.basedir}/../../../dist</compilerStartOption>
					</compilerStartOptions>
					<compilerEndOptions>
						<compilerEndOption>-fPIC</compilerEndOption> <!-- position-independent machine code (required for shared libraries) -->
					</compilerEndOptions>

					<linkerOutputDirectory>${project.basedir}/../../../dist</linkerOutputDirectory>
					<linkerStartOptions>
						<!-- "libpuccini.so" (created by ../../scripts/build-library.sh) -->
						<linkerStartOption>-L ${project.basedir}/../../../dist</linkerStartOption>
					</linkerStartOptions>
					<linkerEndOptions>
						<linkerEndOption>-shared</linkerEndOption>
						<linkerEndOption>-lpuccini</linkerEndOption> <!-- = "libpuccini.so" -->
					</linkerEndOptions>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>