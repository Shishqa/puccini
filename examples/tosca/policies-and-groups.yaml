tosca_definitions_version: tosca_simple_yaml_1_3

metadata:

  template_name: Policies and Groups Example
  template_author: Puccini

policy_types:

  Backup:
    derived_from: tosca:Root
    targets:
    # Can include both node types and group types
    - tosca:Compute
    - RedundantResources # This group type is declared below
    # If "targets" is not specified then any node template or group can be a target

  ContinuousBackup:
    derived_from: Backup
    # Properties are how you configure the policy
    properties:
      frequency:
        type:
          scalar-unit.time
    # Targets are inherited

  ContinuousBlockStorageBackup:
    derived_from: ContinuousBackup
    targets:
    # When inheriting we are allowed to remove target types that were specified in the parent
    # But any types we *do* specify must be equal to or derived from any of those in the parent
    - tosca:Compute
    - RedundantBlockStorages
    # So this would not work:
    #- Redundants

group_types:

  Redundants:
    derived_from: tosca:Root
    # Groups can have properties (and interfaces, too)
    properties:
      priority:
        type:
          float
    # "members" is not specified here, so any node template can be a member

  RedundantResources:
    derived_from: Redundants
    members:
    # Can only be node types (nested groups are not supported)
    - tosca:Compute
    - tosca:Abstract.Storage

  RedundantBlockStorages:
    derived_from: RedundantResources
    members:
    # When inheriting we are allowed to remove member types that were specified in the parent
    # But any types we *do* specify must be equal to or derived from any of those in the parent
    - tosca:BlockStorage
    # So this would not work:
    #- tosca:LoadBalancer

node_types:

  SuperCompute:
    derived_from: tosca:Compute

topology_template:

  node_templates:

    server1:
      type: tosca:Compute

    server2:
      type: tosca:Compute

    server3:
      type: tosca:Compute

    server4:
      type: SuperCompute

    storage:
      type: tosca:ObjectStorage
      properties:
        name: My Storage

  groups:

    redundants:
      type: RedundantResources
      properties:
        priority: 0.8
      members:
      # Member node templates must match our definition at the group type
      # (Can include derived types)
      - server3
      - server4
      - storage

  policies:

    backup:
      type: ContinuousBackup
      properties:
        frequency: .5 d
      targets:
      # Target node templates and groups must match our definition at the policy type
      # (Can include derived types)
      - server2
      - redundants
